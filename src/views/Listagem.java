/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package views;

import models.Usuario;

import javax.swing.table.DefaultTableModel;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import models.Podcast;


/**
 *
 * @author Familia Brasileiro
 */
public class Listagem extends javax.swing.JFrame {
    private Usuario usuario;
    /**
     * Creates new form Listagem
     */
    
    Object[][] dadosPodcasts = {
    {1, "Produtor A", "Episódio 1", 1, "30 min", "http://url.com/episodio1"},
    {2, "Produtor B", "Episódio 2", 2, "45 min", "http://url.com/episodio2"},
    
    // Adicione mais dados conforme necessário
};

String[] colunas = {"ID", "Produtor", "Nome do Episódio", "N° do Episódio", "Duração", "URL do Repositório"};
DefaultTableModel model = new DefaultTableModel(dadosPodcasts, colunas);
    
    
    public Listagem(Usuario usuario) {
        this.usuario = usuario;
        initComponents();
        configurarPermissoes();
        jTable1.setModel(model);
    }
    private void configurarPermissoes(){
        String tipo = usuario.getTipo();
        
        if ("Administrador".equals(tipo)) {
            btnCadastrar.setEnabled(true);
            btnExcluir.setEnabled(true);
            btnListar.setEnabled(true);
        
        } else if("Operador".equals(tipo)) {
            btnCadastrar.setEnabled(true);
            btnExcluir.setEnabled(false);
            btnListar.setEnabled(true);
            
        }else if("Usuario".equals(tipo)){
            btnListar.setEnabled(true);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Listagem = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnListar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();
        lblPodCast2 = new javax.swing.JLabel();
        lblCenaflix2 = new javax.swing.JLabel();
        lblListagem = new javax.swing.JLabel();
        lblPesquisaPod = new javax.swing.JLabel();
        txtPesquisaPodProdutor = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("BR Software");
        setBackground(new java.awt.Color(10, 8, 29));

        Listagem.setBackground(new java.awt.Color(10, 8, 29));
        Listagem.setBorder(javax.swing.BorderFactory.createTitledBorder("Listagem de Podcast"));
        Listagem.setForeground(new java.awt.Color(10, 8, 29));
        Listagem.setToolTipText("Listagem de Podcast");

        jTable1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable1.setForeground(new java.awt.Color(238, 86, 153));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Produtor", "Nome do Epsódio", "N° do Epsódio", "Duração", "URL do Repositório"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Tabela: Id, Produtor, Nome Epsódio, Duração, URL do Repsitório");
        jScrollPane1.setViewportView(jTable1);

        btnListar.setBackground(new java.awt.Color(143, 205, 240));
        btnListar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnListar.setForeground(new java.awt.Color(238, 86, 153));
        btnListar.setText("Listar");
        btnListar.setToolTipText("Botão Listar");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(143, 205, 240));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnExcluir.setForeground(new java.awt.Color(238, 86, 153));
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Botão Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnCadastrar.setBackground(new java.awt.Color(143, 205, 240));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCadastrar.setForeground(new java.awt.Color(238, 86, 153));
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Botão Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListagemLayout = new javax.swing.GroupLayout(Listagem);
        Listagem.setLayout(ListagemLayout);
        ListagemLayout.setHorizontalGroup(
            ListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListagemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 766, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(ListagemLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(btnListar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnExcluir)
                .addGap(198, 198, 198)
                .addComponent(btnCadastrar)
                .addGap(72, 72, 72))
        );
        ListagemLayout.setVerticalGroup(
            ListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ListagemLayout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(ListagemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnListar)
                    .addComponent(btnExcluir)
                    .addComponent(btnCadastrar))
                .addGap(54, 54, 54))
        );

        lblPodCast2.setBackground(new java.awt.Color(10, 8, 29));
        lblPodCast2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPodCast2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/PodCast.jpg"))); // NOI18N
        lblPodCast2.setToolTipText("Imagem PodCast");

        lblCenaflix2.setBackground(new java.awt.Color(0, 0, 0));
        lblCenaflix2.setFont(new java.awt.Font("Segoe UI", 1, 60)); // NOI18N
        lblCenaflix2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCenaflix2.setText("CENAFLIX");
        lblCenaflix2.setToolTipText("CenaFlix");

        lblListagem.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblListagem.setForeground(new java.awt.Color(238, 86, 153));
        lblListagem.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblListagem.setText("LISTAGEM");
        lblListagem.setToolTipText("LISTAGEM");

        lblPesquisaPod.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        lblPesquisaPod.setForeground(new java.awt.Color(238, 86, 153));
        lblPesquisaPod.setText("Pesquisar podcast por Produtor :");
        lblPesquisaPod.setToolTipText("Pesquisar podcast por Produtor :");

        txtPesquisaPodProdutor.setBackground(new java.awt.Color(143, 205, 240));
        txtPesquisaPodProdutor.setToolTipText("Informe o nome para pesquisar o produtor");
        txtPesquisaPodProdutor.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(252, 0, 0)));
        txtPesquisaPodProdutor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaPodProdutorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Listagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPodCast2, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblCenaflix2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblListagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(lblPesquisaPod)
                .addGap(18, 18, 18)
                .addComponent(txtPesquisaPodProdutor, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblPodCast2, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblCenaflix2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(lblListagem)))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPesquisaPod)
                    .addComponent(txtPesquisaPodProdutor, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38)
                .addComponent(Listagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        // TODO add your handling code here: Listar
        List<Podcast> podcasts = Arrays.asList(
            new Podcast(1,"Produtor A", "Episódio 1", 1, 30, "http://url.com/episodio1"),
            new Podcast(2,"Produtor B", "Episódio 2", 2, 45, "http://url.com/episodio2"),
            new Podcast(3, "Guel Arraes", "Alardes", 1, 30, "https://example.com/ep1"),
            new Podcast(4, "Kevin Coster", "Guarda Costa", 19, 60, "https://example.com/ep2"),
            new Podcast(5, "Almir 1", "Episódio 3", 1, 60, "https://example.com/ep3"),
            new Podcast(6, "Monteiro Lobato 2", "Episódio 15", 2, 120, "https://example.com/ep2"),
            new Podcast(7, "Produtor Ivete ", "Episódio 7", 7, 90, "https://example.com/ep3"),
            new Podcast(8, "Produtor 2", "Episódio 2", 2, 45, "https://example.com/ep2"),
            new Podcast(9, "Produtor 3", "Episódio 3", 1, 60, "https://example.com/ep3")
        );
        /*// Limpa a tabela antes de adicionar novos dados
        // Limpar a tabela antes de adicionar novos dados
        model.setRowCount(0);*/
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        // Limpar a tabela antes de adicionar novos dados
        model.setRowCount(0);
        for (Podcast podcast : podcasts) {
            model.addRow(new Object[]{
                podcast.getId(),
                podcast.getNomeProdutor(),
                podcast.getNomeEpsodio(),
                podcast.getNumeroEpisodio(),
                podcast.getDuracao(),
                podcast.getUrl()
            });
        }
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:Cadastrar Podcast
        CadastrarPodcast novoCadastro = new CadastrarPodcast();
        novoCadastro.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here: Excluir Epsodio
        // Obter o modelo da tabela
        
        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        int selectedRow = jTable1.getSelectedRow();
        
        if (selectedRow != -1) {
        // Confirmação antes de excluir
        int confirm = JOptionPane.showConfirmDialog(
                this, 
                "Tem certeza que deseja excluir este episódio?", 
                "Confirmar Exclusão", 
                JOptionPane.YES_NO_OPTION
        );
        
        if (confirm == JOptionPane.YES_OPTION) {
            // Remover a linha selecionada do modelo
            model.removeRow(selectedRow);
            }
        }else{
            // Exibir mensagem de erro se nenhuma linha foi selecionada
        JOptionPane.showMessageDialog(this, "Por favor, selecione um episódio para excluir.", "Erro", JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void txtPesquisaPodProdutorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaPodProdutorActionPerformed
        // TODO add your handling code here:Pesquisar
        // Obter o texto digitado no campo de pesquisa
    String nomeProdutorPesquisa = txtPesquisaPodProdutor.getText().trim().toLowerCase();
    
    // Lista de podcasts completa
    List<Podcast> podcasts = Arrays.asList(
        new Podcast(1, "Produtor 1", "Episódio 1", 1, 30, "https://example.com/ep1"),
        new Podcast(2, "Produtor 2", "Episódio 2", 2, 45, "https://example.com/ep2"),
        new Podcast(3, "Guel Arraes", "Alardes", 1, 30, "https://example.com/ep3"),
        new Podcast(4, "Kevin Coster", "Guarda Costa", 19, 60, "https://example.com/ep4"),
        new Podcast(5, "Almir 1", "Episódio 3", 1, 60, "https://example.com/ep5"),
        new Podcast(6, "Monteiro Lobato 2", "Episódio 15", 2, 120, "https://example.com/ep6"),
        new Podcast(7, "Produtor Ivete", "Episódio 7", 7, 90, "https://example.com/ep7"),
        new Podcast(8, "Produtor 2", "Episódio 2", 2, 45, "https://example.com/ep8"),
        new Podcast(9, "Produtor 3", "Episódio 3", 1, 60, "https://example.com/ep9")
    );

    // Filtrar os podcasts pelo nome do produtor
    List<Podcast> podcastsFiltrados = podcasts.stream()
        .filter(p -> p.getNomeProdutor().toLowerCase().contains(nomeProdutorPesquisa))
        .toList();

    // Obter o modelo da tabela
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    
    // Limpa todas as linhas da tabela antes de adicionar novos dados
    model.setRowCount(0);
    
    // Adicionar os dados filtrados na tabela
    for (Podcast podcast : podcastsFiltrados) {
        model.addRow(new Object[]{
            podcast.getId(),
            podcast.getNomeProdutor(),
            podcast.getNomeEpsodio(),
            podcast.getNumeroEpisodio(),
            podcast.getDuracao(),
            podcast.getUrl()
        });
    }
    }//GEN-LAST:event_txtPesquisaPodProdutorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Listagem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Usuario usuario = new Usuario("usuario", "senha", "Administrador");
                new Listagem(usuario).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Listagem;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnListar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCenaflix2;
    private javax.swing.JLabel lblListagem;
    private javax.swing.JLabel lblPesquisaPod;
    private javax.swing.JLabel lblPodCast2;
    private javax.swing.JTextField txtPesquisaPodProdutor;
    // End of variables declaration//GEN-END:variables

public void setVisibilidadeBotoes(boolean listar, boolean cadastrar, boolean excluir) {
    btnListar.setVisible(listar);
    btnCadastrar.setVisible(cadastrar);
    btnExcluir.setVisible(excluir);
}
}
